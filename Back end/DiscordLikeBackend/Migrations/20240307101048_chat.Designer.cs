// <auto-generated />
using System;
using DiscordLikeBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiscordLikeBackend.Migrations
{
    [DbContext(typeof(BackendContext))]
    [Migration("20240307101048_chat")]
    partial class chat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DiscordLikeBackend.Models.ChatModel", b =>
                {
                    b.Property<long>("SnowFlakeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Participants")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SnowFlakeId");

                    b.ToTable("ChatServices");
                });

            modelBuilder.Entity("DiscordLikeBackend.Models.Message", b =>
                {
                    b.Property<long>("ChatSnowFlakeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("ChatModelSnowFlakeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("senderSnowFlakeId")
                        .HasColumnType("bigint");

                    b.HasKey("ChatSnowFlakeId");

                    b.HasIndex("ChatModelSnowFlakeId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("DiscordLikeBackend.Models.UserModel", b =>
                {
                    b.Property<long>("Snowflake")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("FriendList")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FriendRequests")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Snowflake");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DiscordLikeBackend.Models.Message", b =>
                {
                    b.HasOne("DiscordLikeBackend.Models.ChatModel", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChatModelSnowFlakeId");
                });

            modelBuilder.Entity("DiscordLikeBackend.Models.ChatModel", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
